"""Autogenerated Pydantic model from SharePoint schema (2025-07-30)."""

from datetime import datetime
from enum import Enum, EnumMeta
from typing import Annotated, Optional, List

from pydantic import (
    BaseModel,
    Field,
    WrapValidator,
)

from aind_sharepoint_service_server.models.core import optional_enum


class LASBctype(Enum, metaclass=EnumMeta):
    """Enum class for BCType."""

    SUBMANDIBULAR_IMMUNOLOGY = "Submandibular - Immunology"
    SUBMANDIBULAR = "Submandibular"
    TERMINAL = "Terminal"


class LASDeliverylocation(Enum, metaclass=EnumMeta):
    """Enum class for DeliveryLocation."""

    N_156_4C = "156 4c"
    N_139_80 = "139 -80"
    N_220_4C_IM = "220 4c(IM)"
    N_270_4C = "270 4c"
    N_270_80_B_SHELF_3_LEFT = "270 -80B Shelf 3 (Left)"
    N_320_AIND_4C = "320 AIND 4c"
    N_320_80_SHELF_6 = "320 -80 Shelf 6"
    N_340_4C = "340 4c"
    N_340_80_B_SHELF_1 = "340 -80B Shelf 1"
    N_370_WALK_IN_4C = "370 Walk-in 4c"
    N_379_20_A_SHELF_2 = "379 -20A Shelf 2"
    N_373_80_A_SHELF_2 = "373 -80A Shelf 2"
    N_420_4C = "420 4c"
    N_440_4C = "440 4c"
    N_470_4C = "470 4c"
    N_473_80_E_SHELF_3 = "473 -80E Shelf 3"


class LASDoseroute(Enum, metaclass=EnumMeta):
    """Enum class for doseRoute."""

    INTRAMUSCULAR_IM = "Intramuscular (IM)"
    INTRAPERITONEAL_IP = "Intraperitoneal (IP)"
    INTRAVENOUS_IV = "Intravenous (IV)"
    ORAL_GAVAGE_PO = "Oral Gavage (PO)"
    SUBCUTANEOUS_SC = "Subcutaneous (SC)"


class LASIcvlims(Enum, metaclass=EnumMeta):
    """Enum class for icvLIMS."""

    STEREOTAXIC_INJECTIONS = "Stereotaxic Injections"
    NEW_STEREOTAXIC_INJECTI = "New Stereotaxic Injections"


class LASIcvroute1(Enum, metaclass=EnumMeta):
    """Enum class for icvRoute1."""

    BILATERAL = "Bilateral"
    ANY_UNILATERAL = "Any, Unilateral"
    LEFT_UNILATERAL = "Left, Unilateral"
    RIGHT_UNILATERAL = "Right, Unilateral"


class LASIcvroute2(Enum, metaclass=EnumMeta):
    """Enum class for icvRoute2."""

    BILATERAL = "Bilateral"
    ANY_UNILATERAL = "Any, Unilateral"
    LEFT_UNILATERAL = "Left, Unilateral"
    RIGHT_UNILATERAL = "Right, Unilateral"


class LASIcvroute3(Enum, metaclass=EnumMeta):
    """Enum class for icvRoute3."""

    BILATERAL = "Bilateral"
    ANY_UNILATERAL = "Any, Unilateral"
    LEFT_UNILATERAL = "Left, Unilateral"
    RIGHT_UNILATERAL = "Right, Unilateral"


class LASIcvroute4(Enum, metaclass=EnumMeta):
    """Enum class for icvRoute4."""

    BILATERAL = "Bilateral"
    ANY_UNILATERAL = "Any, Unilateral"
    LEFT_UNILATERAL = "Left, Unilateral"
    RIGHT_UNILATERAL = "Right, Unilateral"


class LASIcvroute5(Enum, metaclass=EnumMeta):
    """Enum class for icvRoute5."""

    BILATERAL = "Bilateral"
    ANY_UNILATERAL = "Any, Unilateral"
    LEFT_UNILATERAL = "Left, Unilateral"
    RIGHT_UNILATERAL = "Right, Unilateral"


class LASLimsproject(Enum, metaclass=EnumMeta):
    """Enum class for LIMSProject."""

    N_0310 = "0310"
    N_0311 = "0311"
    N_0312 = "0312"
    N_0314 = "0314"
    N_0316 = "0316"
    N_0319 = "0319"
    N_0320 = "0320"
    N_0321 = "0321"
    N_03212 = "03212"
    N_03213 = "03213"
    N_03214 = "03214"
    N_0322 = "0322"
    N_0324 = "0324"
    N_0325 = "0325"
    N_0326 = "0326"
    N_0327 = "0327"
    N_03272 = "03272"
    N_0328 = "0328"
    N_0329 = "0329"
    N_0331 = "0331"
    N_0334 = "0334"
    N_03342 = "03342"
    N_0335 = "0335"
    N_0336 = "0336"
    N_0338 = "0338"
    N_0339 = "0339"
    N_03392 = "03392"
    N_0340 = "0340"
    N_0342 = "0342"
    N_03422 = "03422"
    N_0343 = "0343"
    N_0344 = "0344"
    N_0345 = "0345"
    N_0346 = "0346"
    N_0350 = "0350"
    N_0350X = "0350x"
    N_0351 = "0351"
    N_0351X = "0351x"
    N_0354 = "0354"
    N_0355 = "0355"
    N_0357 = "0357"
    N_0358 = "0358"
    N_0359 = "0359"
    N_0360 = "0360"
    N_03602 = "03602"
    N_0362 = "0362"
    N_0363 = "0363"
    N_0364 = "0364"
    N_0365 = "0365"
    N_0365X = "0365x"
    N_0366 = "0366"
    N_0366X = "0366x"
    N_0367 = "0367"
    N_0369 = "0369"
    N_0371 = "0371"
    N_0372 = "0372"
    N_0372X = "0372x"
    N_0374 = "0374"
    N_0376 = "0376"
    N_0376A = "0376a"
    N_0376X = "0376x"
    N_0378 = "0378"
    N_0378X = "0378x"
    N_0380 = "0380"
    N_0384 = "0384"
    N_0386 = "0386"
    N_0388 = "0388"
    AIND_MSMA = "aind-msma"
    AIND_DISCOVERY = "aind-discovery"
    AIND_EPHYS = "aind-ephys"
    AIND_OPHYS = "aind-ophys"
    APR_OX = "APROx"
    A_XL_OX = "AXlOx"
    BA_RSEQ_GENETIC_TOOLS = "BARseq_GeneticTools"
    BRAIN_STIM = "BrainStim"
    BRAINTV_VIRAL_STRATEGIES = "BraintvViralStrategies"
    C200 = "C200"
    C600 = "C600"
    C600_LATERAL = "C600Lateral"
    C600X = "C600x"
    CELLTYPES_TRANSGENIC_CHAR = "CelltypesTransgenicCharacterizationGCaMP"
    CITRICACIDPILOT = "Citricacidpilot"
    CON_9999 = "CON-9999"
    CON_C505 = "CON-C505"
    CON_CS04 = "CON-CS04"
    DEEPSCOPE_SLM_DEVELOPMENT = "DeepscopeSLMDevelopment"
    DYNAMIC_ROUTING_BEHAVIOR = "DynamicRoutingBehaviorDev"
    DYNAMIC_ROUTING_OPTO_DEV = "DynamicRoutingOptoDev"
    DYNAMIC_ROUTING_SURGICAL = "DynamicRoutingSurgicalDevelopment"
    DYNAMIC_ROUTING_TASK1_PRO = "DynamicRoutingTask1Production"
    DYNAMIC_ROUTING_TASK2_PRO = "DynamicRoutingTask2Production"
    DYNAMIC_ROUTING_ULTRA_OPT = "DynamicRoutingUltraOptotaggingBehavior"
    H120 = "H120"
    H200 = "H200"
    H301 = "H301"
    H301T = "H301t"
    H301_X = "H301X"
    H501_X = "H501X"
    H504 = "H504"
    IS_IX = "ISIx"
    LARGE_SCALE_VOLTAGE = "LargeScaleVoltage"
    LEARNINGM_FISH_DEVELOPMEN = "LearningmFISHDevelopment"
    LEARNINGM_FISH_TASK1_A = "LearningmFISHTask1A"
    M301T = "M301t"
    MESOSCOPE_DEVELOPMENT = "MesoscopeDevelopment"
    METHDEV_PECT_PROTEOMICS = "Methdev_PECT_Proteomics"
    M_FISH_PLATFORM_DEVELOPME = "mFishPlatformDevelopment"
    MINDSCOPE_TRANSGENIC_CHAR = "MindscopeTransgenicCharacterizationGCaMP"
    M_IVSCC_MET = "mIVSCC-MET"
    M_IVSCC_ME_TX = "mIVSCC-METx"
    M_IVSCC_MET_LINK_AIBS = "mIVSCC-MET-Link_AIBS"
    M_M_PATCHX = "mMPatchx"
    M_MPATC_HX = "mMPATCHx"
    MOUSE_BRAIN_CELL_ATLAS_CH = "MouseBrainCellAtlasCharacterizationPilot"
    MOUSE_BRAIN_CELL_ATLAS_CH_2 = "MouseBrainCellAtlasCharacterizatlon"
    MOUSE_BRAIN_CELL_ATLAS_TR = "MouseBrainCellAtlasTranssynaptic"
    MOUSE_FULL_MORPHOLOGY_FMO = "MouseFullMorphologyFmost"
    MOUSE_GENETIC_TOOLS_PROJE = "MouseGeneticToolsProjectionMapping"
    M_VISP_TAXL_O = "MVisp-taxl.o"
    MULTISCOPE_SIGNAL_NOISE = "MultiscopeSignalNoise"
    N200 = "N200"
    N310 = "N310"
    NEUROPIXEL_VISUAL_BEHAVIO = "NeuropixelVisualBehavior"
    NEUROPIXEL_VISUAL_BEHAVIO_2 = "NeuropixelVisualBehaviorDevelopment"
    NEUROPIXEL_VISUAL_CODING = "NeuropixelVisualCoding"
    OLVSX = "OLVSX"
    OM_FIS_HCOREGISTRATIONPIL = "omFISHcoregistrationpilot"
    OM_FISH_CUX2_MESO = "omFISHCux2Meso"
    OM_FISH_GAD2_MESO = "omFISHGad2Meso"
    OM_FISH_GAD2_PILOT = "omFISHGad2Pilot"
    OM_FISH_RBP4_MESO = "omFISHRbp4Meso"
    OM_FISH_RORB_PILOT = "omFISHRorbPilot"
    OM_FISHRO_BINJECTIONVIRUS = "omFISHROBinjectionviruspilot"
    OM_FISH_SST_MESO = "omFISHSstMeso"
    OM_FISH_VIP_MESO = "omFISHVipMeso"
    OPEN_SCOPE_DENDRITE_COUPL = "OpenScopeDendriteCoupling"
    OPENSCOPE_DEVELOPMENT = "OpenscopeDevelopment"
    OPEN_SCOPE_ILLUSION = "OpenScopeIllusion"
    OPEN_SCOPE_GLOBAL_LOCAL_O = "OpenScopeGlobalLocalOddball"
    OPENSCOPE_GAMMA_PILOT = "OpenscopeGammaPilot"
    OPENSCOPE_GAMMA_PRODUCTLO = "OpenscopeGammaProductlon"
    OPENSCOPELNJECTION_PILOT = "OpenscopelnjectionPilot"
    OPEN_SCOPE_LOOP = "OpenScopeLoop"
    OPENSCOPE_MOTION_PLLOT = "OpenscopeMotionPllot"
    OPENSCOPE_MOTION_PRODUCTI = "OpenscopeMotionProduction"
    OPENSCOPE_MULTIPLEX_PILOT = "OpenscopeMultiplexPilot"
    OPENSCOPE_MULTIPLEX_PRODU = "OpenscopeMultiplexProduction"
    OPEN_SCOPE_P3 = "OpenScopeP3"
    OPEN_SCOPE_PSYCODE = "OpenScopePsycode"
    OPEN_SCOPE_SEQUENCE_LEARN = "OpenScopeSequenceLearning"
    OPEN_SCOPE_TEMPORAL_BARCO = "OpenScopeTemporalBarcode"
    OPEN_SCOPE_TEXTURE = "OpenScopeTexture"
    OPEN_SCOPE_V2 = "OpenScopeV2"
    OPEN_SCOPE_VISION2_HIPPOC = "OpenScopeVision2Hippocampus"
    OPEN_SCOPE_VISMO = "OpenScopeVismo"
    OPH5_X = "OPH5X"
    SLC6_A1_NEUROPIXEL = "SLC6A1Neuropixel"
    SMART_SPIM_GENETIC_TOOLS = "SmartSPIM_GeneticTools"
    SURGERY_X = "SurgeryX"
    T301 = "T301"
    T301T = "T301t"
    T301_X = "T301X"
    T503 = "T503"
    T503_X = "T503X"
    T504 = "T504"
    T504_X = "T504X"
    T600 = "T600"
    T601 = "T601"
    T601_X = "T601X"
    TCYTX = "TCYTX"
    TASK_TRAINED_NETWORKS_MUL = "TaskTrainedNetworksMultiscope"
    TASK_TRAINED_NETWORKS_NEU = "TaskTrainedNetworksNeuropixel"
    TEMPLETON_PSYCHEDELICS = "TempletonPsychedelics"
    TEMPLETON_TTOC = "Templeton TTOC"
    TINY_BLUE_DOT_BEHAVIOR = "TinyBlueDotBehavior"
    U01_BFCT = "U01BFCT"
    VARIABILITY_AIM1 = "VariabilityAim1"
    VARIABILITY_AIM1_PILOT = "VariabilityAim1Pilot"
    VARIABILITY_SPONTANEOUS = "VariabilitySpontaneous"
    VGT_102_01_064_10_CTY_GE = "VGT_102-01-064-10 CTY Genetic Tools"
    VI_DEEP_DIVE_EM_VOLUME = "VIDeepDiveEMVolume"
    VI_DEEPDLVE_DEEPSCOPE_PIE = "VIDeepdlveDeepscopePiezo"
    VIP_AXONAL_V1_PHASE1 = "VipAxonalV1Phase1"
    VIP_SOMATIC_V1_MESO = "VIPSomaticV1Meso"
    VIP_SOMATIC_V1_PHASE1 = "VipSomaticV1Phase1"
    VIP_SOMATIC_V1_PHASE2 = "VipSomaticV1Phase2"
    VISUAL_BEHAVIOR = "VisualBehavior"
    VISUAL_BEHAVIOR_DEVELOPME = "VisualBehaviorDevelopment"
    VISUAL_BEHAVIOR_MULTISCOP = "VisualBehaviorMultiscope"
    VISUAL_BEHAVIOR_MULTISCOP_2 = "VisualBehaviorMultiscope4areasx2d"
    VISUAL_BEHAV_IOR_MULTISCO = "VisualBehavIorMultiscopeTask1G"
    VISUAL_BEHAVIOR_TASK1_B = "VisualBehaviorTask1B"


class LASLimsworkflow(Enum, metaclass=EnumMeta):
    """Enum class for LIMSWorkflow."""

    N_2P_SERIAL_IMAGING = "2p serial Imaging"
    T601_1_RETINA = "T601.1 Retina"
    T601_2A_RETROGRADE_CAV2 = "T601.2a Retrograde CAV2-Cre;Ai75"
    T601_2B_RETROGRADE_RABI = "T601.2b Retrograde Rabies-GFP"
    T601_2C_RETROGRADE_FLUO = "T601.2c Retrograde Fluorogold"
    T601_3A_ANTEROGRADE_CRE = "T601.3a Anterograde Cre-Defined EGFP"
    T601_3B_ANTEROGRADE_CRE = "T601.3b Anterograde Cre-Deflned SypEGFP"
    T601_4_ANTEROGRADE_TARG = "T601.4 Anterograde Target Defined"
    T601_5_TRANS_SYNAPTIC = "T601.5 trans-synaptic"
    SCREENING = "Screening"
    CHARACTERIZATION = "Characterization"
    T503_2_ANTEROGRADE_TARG = "T503.2 Anterograde Target-Defined"
    T503_3_ALZHEIMER_S_PLAQ = "T503.3 Alzheimer's Plaque"
    T503_3_CONTROL = "T503.3 control"
    T503_ANTEROGRADE_CRE_DEF = "T503 anterograde Cre-defined SypEGFP"
    MGT_ANTEROGRADE_PROJECT = "MGT Anterograde Projection Mapping"


class LASLimsworkflow2(Enum, metaclass=EnumMeta):
    """Enum class for LIMSWorkflow 2."""

    N_2P_SERIAL_IMAGING = "2p serial Imaging"
    T601_1_RETINA = "T601.1 Retina"
    T601_2A_RETROGRADE_CAV2 = "T601.2a Retrograde CAV2-Cre;Ai75"
    T601_2B_RETROGRADE_RABI = "T601.2b Retrograde Rabies-GFP"
    T601_2C_RETROGRADE_FLUO = "T601.2c Retrograde Fluorogold"
    T601_3A_ANTEROGRADE_CRE = "T601.3a Anterograde Cre-Defined EGFP"
    T601_3B_ANTEROGRADE_CRE = "T601.3b Anterograde Cre-Deflned SypEGFP"
    T601_4_ANTEROGRADE_TARG = "T601.4 Anterograde Target Defined"
    T601_5_TRANS_SYNAPTIC = "T601.5 trans-synaptic"
    SCREENING = "Screening"
    CHARACTERIZATION = "Characterization"
    T503_2_ANTEROGRADE_TARG = "T503.2 Anterograde Target-Defined"
    T503_3_ALZHEIMER_S_PLAQ = "T503.3 Alzheimer's Plaque"
    T503_3_CONTROL = "T503.3 control"
    T503_ANTEROGRADE_CRE_DEF = "T503 anterograde Cre-defined SypEGFP"
    MGT_ANTEROGRADE_PROJECT = "MGT Anterograde Projection Mapping"


class LASPostfix(Enum, metaclass=EnumMeta):
    """Enum class for PostFix."""

    N_30_SUCROSE = "30% Sucrose"
    N_30_SUCROSE_FOIL_WRAPPE = "30% Sucrose (foil-wrapped tube)"
    N_1X_PBS = "1xPBS"
    N_1X_PBS_FOIL_WRAPPED_TUB = "1xPBS (foil-wrapped tube)"
    N_1X_PBS_0_01_AZIDE = "1xPBS+ 0.01%Azide"
    N_1X_PBS_0_01_AZIDE_5M_L = "1xPBS+ 0.01%Azide (5mL tubes)"
    N_1X_PBS_0_01_AZIDE_FOIL = "1xPBS+ 0.01%Azide (foil-wrapped tube)"
    N_4_PFA_TO_1X_PBS = "4%PFA to 1xPBS"
    NUCLEASE_FREE_1X_PBS_OM_F = "Nuclease-free 1xPBS (omFISH)"
    NUCLEASE_FREE_30_SUCROSE = "Nuclease-free 30% Sucrose"
    NUCLEASE_FREE_30_SUCROSE_2 = "Nuclease-free 30% Sucrose(FOIL)"
    DPBS_NUCLEASE_FREE = "DPBS(Nuclease-free)"
    OTHER_SPECIFY_BELOW = "Other (Specify below)"


class LASProjectid(Enum, metaclass=EnumMeta):
    """Enum class for ProjectID."""

    N_101_03_001_10_COSTA_PG = "101-03-001-10 Costa PGA Lab Research (Direct)"
    N_102_01_007_10_CTY_M_FIS = "102-01-007-10 CTY mFISH"
    N_102_01_009_10_CTY_MORP = "102-01-009-10 CTY Morphology"
    N_102_01_011_10_CTY_CONN = "102-01-011-10 CTY Connectome EM"
    N_102_01_012_10_CTY_CONN = "102-01-012-10 CTY Connectome Meso"
    N_102_01_016_10_CTY_TAXO = "102-01-016-10 CTY Taxonomy"
    N_102_01_029_20_CTY_BRAIN = (
        "102-01-029-20 CTY BRAIN Cell-type Specific Enhancer Viruses"
    )
    N_102_01_031_20_W4_CTY_EU = (
        "102-01-031-20 W4 - CTY EU Horizon 2020 BRAINTIME"
    )
    N_102_01_031_20_W5_CTY_EU = (
        "102-01-031-20 W5 - CTY EU Horizon 2020 BRAINTIME"
    )
    N_102_01_032_20_CTY_MOUS = "102-01-032-20 CTY Mouse Aging"
    N_102_01_036_20_CTY_DISS = (
        "102-01-036-20 CTY Dissemination of 3-Photon Imaging"
    )
    N_102_01_040_20_CTY_BRAIN = (
        "102-01-040-20 CTY BRAIN UG3/UH3 Genetic Viral Tools"
    )
    N_102_01_043_20_CTY_OPTI = "102-01-043-20 CTY Optical interrogation"
    N_102_01_044_10_CTY_GENO = "102-01-044-10 – CTY Genomics"
    N_102_01_045_10_CTY_IVSCC = "102-01-045-10 – CTY IVSCC"
    N_102_01_046_20_CTY_WEIL = (
        "102-01-046-20 - CTY Weill Neuronal Heterogeneity"
    )
    N_102_01_048_10_CTY_BARC = "102-01-048-10 CTY Barcoded Connectomics"
    N_102_01_049_20_CTY_OPIO = "102-01-049-20 - CTY Opioid Transcriptomics"
    N_102_01_054_20_CTY_PFAC = "102-01-054-20 CTY PFAC"
    N_102_01_055_20_CTY_EM_M = "102-01-055-20 CTY EM Motor Cortex"
    N_102_01_059_20_CTY_SCORC = "102-01-059-20 CTY SCORCH"
    N_102_01_060_20_CTY_BRAI = "102-01-060-20 CTY Brain Drain"
    N_102_01_061_20_CTY_BICAN = "102-01-061-20 CTY BICAN Human and NHP Atlas"
    N_102_01_062_10_AIBS_BICA = (
        "102-01-062-10 AIBS BICAN Mouse Developmental Atlas"
    )
    N_102_01_064_10_CTY_GENE = "102-01-064-10 CTY Genetic Tools"
    N_102_01_066_20_AIBS_CTY = "102-01-066-20 AIBS CTY CONNECTS HIVE"
    N_102_01_066_20_AIND_CTY = "102-01-066-20 AIND CTY CONNECTS HIVE"
    N_102_01_068_20_CTY_CONNE = "102-01-068-20 CTY CONNECTS Patchlink"
    N_102_01_069_20_PRE_SPE = "102-01-069-20 Pre-Spend"
    N_102_01_070_20_CTY_CONNE = "102-01-070-20 CTY CONNECTS MouseConnects"
    N_102_01_073_20_CTY_CT_P = "102-01-073-20 CTY CT Projectome"
    N_102_01_078_20_AIBS_VOC = "102-01-078-20 AIBS Vocal Circuit"
    N_102_01_079_20_AIBS_CONN = (
        "102-01-079-20 AIBS CONNECTS TransNeuronal Tools"
    )
    N_102_01_083_20_AIBS_WB_A = "102-01-083-20 AIBS WB AAV Toolbox"
    N_102_01_999_10_CTY_PROG = "102-01-999-10 CTY Program Admin"
    N_102_02_004_10_BTV_VISU = "102-02-004-10 BTV Visual Behavior"
    N_102_02_012_20_BTV_BRAIN = "102-02-012-20 BTV BRAIN Viral Strategies"
    N_102_04_004_10_OTH_MERI = (
        "102-04-004-10 OTH Meritorious Scholar Directed Research"
    )
    N_102_04_006_20_OTH_MEAS = (
        "102-04-006-20 OTH Measuring Consciousness Ph2 (TBD)"
    )
    N_102_04_007_10_APLD_TAR = "102-04-007-10 APLD Targeted CNS Gene Therapy"
    N_102_04_011_10_CTY_SR_SY = "102-04-011-10 CTY SR: SYNGAP1"
    N_102_04_012_10_CTY_SR_F = "102-04-012-10 : CTY SR: Friedreich Ataxia"
    N_102_04_016_20_CTY_DRAV = "102-04-016-20 CTY Dravet Phase 3 WRF"
    N_102_04_017_10_AIBS_EPI = "102-04-017-10 AIBS Epilepsy"
    N_102_04_019_20_AIBS_DSF = "102-04-019-20 AIBS DSF Dravet"
    N_102_88_001_10_XPG_CORE = "102-88-001-10 XPG Core Imaging: BARseq"
    N_102_88_001_10_XPG_CORE_2 = (
        "102-88-001-10 XPG Core Imaging: Methods Development"
    )
    N_122_88_002_10_XPG_CORE = "122-88-002-10 XPG Core NSB Behavior"
    N_102_88_003_10_ANIMAL = "102-88-003-10 Animal Care Team"
    N_102_88_005_10_TRANSGEN = "102-88-005-10 Transgenic Colony Management"
    N_102_88_008_10_LAB_ANI = "102-88-008-10 Lab Animal Services"
    N_106_09_001_10_TISSUE = "106-09-001-10 Tissue Immunity"
    N_110_01_001_10_PG_PROTE = "110-01-001-10 PG Proteomics"
    N_121_01_016_20_MSP_BRAIN = "121-01-016-20 MSP BRAIN OpenScope"
    N_121_01_018_20_MSP_EPHA = "121-01-018-20 MSP Ephaptic Cell Typ"
    N_121_01_023_20_MSP_TEMP = (
        "121-01-023-20 MSP Templeton - Testing Theories of Consciousness"
    )
    N_121_01_025_20_MSP_U01 = (
        "121-01-025-20 MSP U01 Bridging Function, Connectivity,"
        " & Transcriptomics"
    )
    N_121_01_026_20_MSP_TEMP = (
        "121-01-026-20 MSP Templeton Measuring Distinct Conscious State"
    )
    N_122_01_001_10_AIND_SCI = "122-01-001-10 AIND Scientific Activities"
    N_122_01_002_20_MOLECULA = "122-01-002-20 Molecular Core"
    N_122_01_004_20_AIND_BRA = "122-01-004-20 AIND Brainstem RF1"
    N_122_01_010_20_AIND_POO = "122-01-010-20 - AIND Poo Simons BTI"
    N_122_01_011_20_AIND_COH = (
        "122-01-011-20 - AIND Cohen JHU R01 Transferred Subaward"
    )
    N_122_01_012_20_AIND_RF1 = (
        "122-01-012-20 - AIND RF1 Functions of locus coeruleus"
    )
    N_122_01_013_10_MSP_SCIE = "122-01-013-10 MSP Scientific Activities"
    N_122_01_014_20_AIND_SIE = "122-01-014-20 - AIND Siegle U01 NPOpto"
    N_122_01_019_20_AIND_CZI = "122-01-019-20 AIND CZI Collaborative Pairs"
    N_122_01_020_20_AIBS_COH = "122-01-020-20 AIBS Cohen BICAN R01"
    N_122_01_020_20_AIND_COH = "122-01-020-20 AIND Cohen BICAN R01"
    N_122_01_022_20_AIND_POD = "122-01-022-20 AIND Podgorski UM1"
    N_123_01_003_20_MOTOR_C = "123-01-003-20 Motor Circuit Dysfunction in PD"
    N_124_01_001_10_BRAIN_C = "124-01-001-10 Brain & Consciousness (Direct)"
    N_125_01_001_10_SEA_HUB = (
        "125-01-001-10 - SeaHub Scientific Activities (Direct)"
    )
    N_127_01_001_10_CELL_CI = "127-01-001-10 Cell & Circuit Therapeutics"
    AAV_PRODUCTION_102_88_004 = "AAV production 102-88-004-10"
    R_D_102_88_004_10 = "R&D 102-88-004-10"


class LASProtocol(Enum, metaclass=EnumMeta):
    """Enum class for Protocol."""

    N_2207_IN_VITRO_BRAIN = "2207 - In Vitro Brain Stimulation"
    N_2212_INVESTIGATING_BR = "2212 - Investigating Brain States"
    N_2301_TESTING_OF_ENHANC = (
        "2301 - Testing of enhancers and AAV gene therapy vectors"
    )
    N_2304_NEUROSURGERY_BEH = (
        "2304 - Neurosurgery & Behavior Training Protocol"
    )
    N_2305_IN_VIVO_BRAIN = "2305 - In Vivo Brain Stimulation"
    N_2306_PATCH_SEQ_CHARACT = (
        "2306 - Patch-seq characterization of mouse neurons in acute brain"
        " slices for cross-species comparison studies"
    )
    N_2307_DISSECTING_THE_NE = (
        "2307 - Dissecting the neural circuits of adaptive control of behavior"
    )
    N_2308_INDUCTION_OF_IMM = "2308 - Induction of Immune Memory"
    N_2401_THE_USE_OF_MICE_F = (
        "2401 - The use of mice for the development of biological recorders"
    )
    N_2402_BRAIN_OBSERVATOR = "2402 - Brain Observatory Optical Physiology"
    N_2403_ELECTROPHYSIOLOGY = "2403 - Electrophysiology Mindscope Phase 4"
    N_2405_ANALYSIS_OF_INTE = (
        "2405 - Analysis of Integrated Neuronal Phenotypes"
    )
    N_2406_CHARACTERIZATION = (
        "2406 - Characterization of mouse and viral genetic tools"
    )
    N_2410_VALIDATION_OF_BRA = (
        "2410 - Validation of brain cell type enhancer AAV vectors in rats"
    )
    N_2412_CIRCUIT_TRACING_A = (
        "2412 - Circuit tracing and optical physiology of mouse cortex"
    )
    N_2413_NEUROPHYSIOLOGY_O = (
        "2413 - Neurophysiology of Naturalistic Learning"
    )
    N_2414_ELECTROPHYSIOLOGI = (
        "2414 - Electrophysiological and optical interrogation of brain-wide"
        " neural circuits in the mouse"
    )
    N_2415_OPTOPHYSIOLOGICAL = (
        "2415 - Optophysiological analysis of brain-wide neural circuits "
        "in the mouse"
    )
    N_2416_ANATOMICAL_ANALYS = (
        "2416 - Anatomical analysis of brain-wide neural circuits in the mouse"
    )
    N_2417_CHARACTERIZATION = (
        "2417 - Characterization of transcriptomic cell type activation and "
        "their molecular adaptations that occur during psychedelic, "
        "antidepressants, and antipsychotic drug use"
    )
    N_2418_IN_VITRO_SINGLE = "2418 - In Vitro Single Cell Characterization"
    N_2427_OPEN_SCOPE_MINDS = (
        "2427 - OpenScope Mindscope animal protocol for Optical Physiology and"
        " Neuropixel"
    )
    N_2453_MOUSE_BREEDING = "2453 - Mouse Breeding"
    N_2457_TRAINING_AND_QUAL = (
        "2457 - Training and qualification of animal users"
    )
    N_2459_SPATIAL_CONNECTOM = (
        "2459 - Spatial, connectomic and molecular characterization "
        "of spinal cord and sympathetic nervous system"
    )
    N_2505_TESTING_AA_VS_IN = "2505 - Testing AAVs in Parkinson's mouse models"
    N_2511_DISSECTING_THE_NE = (
        "2511 - Dissecting the neural circuits of motor learning and control"
    )
    N_2530_DEVELOPMENT_OF_T = (
        "2530 - Development of Transgenic Technologies & Methodologies"
    )
    N_2538_INTERROGATING_PRO = (
        "2538 - Interrogating projections and gene expression of neurons"
        " by in situ sequencing"
    )
    N_2547_PROTEOMIC_EXPLORA = "2547 - Proteomic exploration of cell types"
    N_2577_IN_VITRO_BRAIN = "2577 - In Vitro Brain Stimulation"
    N_2580_OPTIMIZATION_AND = (
        "2580 - Optimization and validation of viral vectors"
    )


class LASReqpro1(Enum, metaclass=EnumMeta):
    """Enum class for ReqPro1."""

    TISSUE_COLLECTION = "Tissue Collection"
    INDUCTION = "Induction"
    DOSING = "Dosing"
    RETRO_ORBITAL_INJECTION = "Retro-Orbital Injection"
    INTRACEREBROVENTRICULAR = "Intracerebroventricular Injection"
    BLOOD_COLLECTION = "Blood Collection"
    CEREBROSPINAL_FLUID_COL = "Cerebrospinal Fluid Collection (CSF)"
    OTHER = "Other"


class LASReqpro2(Enum, metaclass=EnumMeta):
    """Enum class for ReqPro2."""

    TISSUE_COLLECTION = "Tissue Collection"
    INDUCTION = "Induction"
    DOSING = "Dosing"
    RETRO_ORBITAL_INJECTION = "Retro-Orbital Injection"
    INTRACEREBROVENTRICULAR = "Intracerebroventricular Injection"
    BLOOD_COLLECTION = "Blood Collection"
    CEREBROSPINAL_FLUID_COL = "Cerebrospinal Fluid Collection (CSF)"
    OTHER = "Other"


class LASReqpro3(Enum, metaclass=EnumMeta):
    """Enum class for ReqPro3."""

    TISSUE_COLLECTION = "Tissue Collection"
    INDUCTION = "Induction"
    DOSING = "Dosing"
    RETRO_ORBITAL_INJECTION = "Retro-Orbital Injection"
    INTRACEREBROVENTRICULAR = "Intracerebroventricular Injection"
    BLOOD_COLLECTION = "Blood Collection"
    CEREBROSPINAL_FLUID_COL = "Cerebrospinal Fluid Collection (CSF)"
    OTHER = "Other"


class LASReqpro4(Enum, metaclass=EnumMeta):
    """Enum class for ReqPro4."""

    TISSUE_COLLECTION = "Tissue Collection"
    INDUCTION = "Induction"
    DOSING = "Dosing"
    RETRO_ORBITAL_INJECTION = "Retro-Orbital Injection"
    INTRACEREBROVENTRICULAR = "Intracerebroventricular Injection"
    BLOOD_COLLECTION = "Blood Collection"
    CEREBROSPINAL_FLUID_COL = "Cerebrospinal Fluid Collection (CSF)"
    OTHER = "Other"


class LASRequeststatus2(Enum, metaclass=EnumMeta):
    """Enum class for RequestStatus2."""

    NEW = "New"
    IN_PROGRESS = "In Progress"
    COMPLETE = "Complete"
    CANCELLED = "Cancelled"


class LASRoeye1(Enum, metaclass=EnumMeta):
    """Enum class for roEye1."""

    BEHIND_EITHER = "Behind Either"
    BEHIND_RIGHT = "Behind Right"
    BEHIND_LEFT = "Behind Left"


class LASRoeye2(Enum, metaclass=EnumMeta):
    """Enum class for roEye2."""

    BEHIND_EITHER = "Behind Either"
    BEHIND_RIGHT = "Behind Right"
    BEHIND_LEFT = "Behind Left"


class LASRoeye3(Enum, metaclass=EnumMeta):
    """Enum class for roEye3."""

    BEHIND_EITHER = "Behind Either"
    BEHIND_RIGHT = "Behind Right"
    BEHIND_LEFT = "Behind Left"


class LASRoeye4(Enum, metaclass=EnumMeta):
    """Enum class for roEye4."""

    BEHIND_EITHER = "Behind Either"
    BEHIND_RIGHT = "Behind Right"
    BEHIND_LEFT = "Behind Left"


class LASRoeye5(Enum, metaclass=EnumMeta):
    """Enum class for roEye5."""

    BEHIND_EITHER = "Behind Either"
    BEHIND_RIGHT = "Behind Right"
    BEHIND_LEFT = "Behind Left"


class LASRolims(Enum, metaclass=EnumMeta):
    """Enum class for roLIMS."""

    STEREOTAXIC_INJECTIONS = "Stereotaxic Injections"
    NEW_STEREOTAXIC_INJECTI = "New Stereotaxic Injections"


class LASRosop(Enum, metaclass=EnumMeta):
    """Enum class for roSOP."""

    AF0131_RETRO_ORBITAL_IN = "AF0131 Retro-orbital Injection"
    AF0139_RETRO_ORBITAL_IN = (
        "AF0139 Retro-orbital Injection of AAV Vectors for Viral "
        "Genetic Tools Pipeline"
    )


class LASRowhere(Enum, metaclass=EnumMeta):
    """Enum class for roWhere."""

    LAS_DROP_BOX_IN_VIVARIU = "LAS Drop box in Vivarium -80 freezer"
    VIVARIUM_4C_156 = "Vivarium 4c 156"
    OTHER_SPECIFY_BELOW = "Other (Specify below)"


class LASSpecies(Enum, metaclass=EnumMeta):
    """Enum class for Species."""

    MOUSE = "Mouse"
    RAT = "Rat"


class LASTamFrequency(Enum, metaclass=EnumMeta):
    """Enum class for TAM Frequency."""

    STANDARD_5_DAY_DOSE = "Standard 5 day dose"
    SINGLE_DOSE = "Single dose"
    OTHER_TYPE_IN = "Other (Type in)"


class LASTcprep(Enum, metaclass=EnumMeta):
    """Enum class for TCPrep."""

    FRESH_BRAIN_DISSECTION = "Fresh Brain Dissection (SOP AF0061)"
    MOUSE_CARDIAC_PERFUSION = "Mouse Cardiac Perfusion (SOP AF0075)"
    ACSF_PERFUSION = "ACSF Perfusion"
    MOUSE_BRAIN_PERFUSION_A = (
        "Mouse Brain Perfusion and Flash Freezing Protocol (SOP AF0138)"
    )
    EMBRYO_COLLECTION = "Embryo Collection"
    MOUSE_CARDIAC_PERFUSION_2 = (
        "Mouse Cardiac Perfusion and Brain Hemisphere Processing "
        "for Viral Genetic Tools Pipeline (SOP AF0140)"
    )
    MOUSE_CARDIAC_PERFUSION_3 = "Mouse Cardiac Perfusion with Gel"


class LASTctiss(Enum, metaclass=EnumMeta):
    """Enum class for TCTiss."""

    BRAIN = "Brain"
    RIGHT_EYE = "Right Eye"
    LEFT_EYE = "Left Eye"
    EARS = "Ears"
    SPINAL_CORD = "Spinal Cord"
    HEART = "Heart"
    LIVER = "Liver"
    EMBRYO_SPECIFY_BELOW = "Embryo (Specify below)"
    LYMPH_NODES_SPECIFY_BELO = "Lymph nodes (Specify below)"
    SPLEEN = "Spleen"
    KIDNEYS = "Kidneys"
    REPRODUCTIVE_ORGAN = "Reproductive Organ"
    EPIDIDYMIS = "Epididymis"
    TAIL_SNIPS = "Tail Snips"
    OTHER_TISSUE_SPECIFY_BE = "Other Tissue (Specify below)"


class LASTmpFrequency(Enum, metaclass=EnumMeta):
    """Enum class for TMP Frequency."""

    STANDARD_3_DAY_DOSE = "Standard 3 day dose"
    SINGLE_DOSE = "Single dose"
    OTHER_TYPE_IN = "Other (Type-in)"


class LASWheretoobtainsubstanceIcv(Enum, metaclass=EnumMeta):
    """Enum class for WheretoObtainsubstance(ICV)."""

    LAS_BLUE_BIN_IN_VIVARIUM = "LAS blue bin in Vivarium –80 freezer"
    OTHER_SPECIFY_BELOW = "Other (Specify below)"


class Las2020List(BaseModel, extra="allow"):
    """Fields in SharePoint list."""

    accommodation_comment: Optional[str] = Field(
        default=None,
        alias="AccommodationComment",
        title="AccommodationComment",
    )
    acsf_time1: Optional[str] = Field(
        default=None, alias="ACSFTime1", title="ACSFTime1"
    )
    acsf_time2: Optional[str] = Field(
        default=None, alias="ACSFTime2", title="ACSFTime2"
    )
    acsf_time3: Optional[str] = Field(
        default=None, alias="ACSFTime3", title="ACSFTime3"
    )
    acsf_time4: Optional[str] = Field(
        default=None, alias="ACSFTime4", title="ACSFTime4"
    )
    acsf_time5: Optional[str] = Field(
        default=None, alias="ACSFTime5", title="ACSFTime5"
    )
    acsfid1: Optional[str] = Field(
        default=None, alias="ACSFID1", title="ACSFID1"
    )
    acsfid2: Optional[str] = Field(
        default=None, alias="ACSFID2", title="ACSFID2"
    )
    acsfid3: Optional[str] = Field(
        default=None, alias="ACSFID3", title="ACSFID3"
    )
    acsfid4: Optional[str] = Field(
        default=None, alias="ACSFID4", title="ACSFID4"
    )
    acsfid5: Optional[str] = Field(
        default=None, alias="ACSFID5", title="ACSFID5"
    )
    afternoon_pf: Optional[bool] = Field(
        default=None, alias="AfternoonPF", title="AfternoonPF"
    )
    animals_availableon_proto: Optional[bool] = Field(
        default=None,
        alias="AnimalsAvailableonProtocol",
        title="AnimalsAvailableonProtocol",
    )
    app_author: Optional[str] = Field(
        default=None, alias="AppAuthor", title="App Created By"
    )
    app_editor: Optional[str] = Field(
        default=None, alias="AppEditor", title="App Modified By"
    )
    attachments: Optional[bool] = Field(
        default=None, alias="Attachments", title="Attachments"
    )
    author: Optional[str] = Field(
        default=None, alias="Author", title="Requestor"
    )
    bc_age: Optional[str] = Field(default=None, alias="BCAge", title="BCAge")
    bc_genotypes: Optional[str] = Field(
        default=None, alias="BCGenotypes", title="BCGenotypes"
    )
    bc_location: Optional[str] = Field(
        default=None, alias="BCLocation", title="BCLocation"
    )
    bc_tube: Optional[str] = Field(
        default=None, alias="BCTube", title="BCTube"
    )
    bc_type: Annotated[LASBctype, WrapValidator(optional_enum)] = Field(
        default=None, alias="BCType", title="BCType"
    )
    bc_volume: Optional[str] = Field(
        default=None, alias="BCVolume", title="BCVolume"
    )
    color_tag: Optional[str] = Field(
        default=None, alias="_ColorTag", title="Color Tag"
    )
    compliance_asset_id: Optional[str] = Field(
        default=None, alias="ComplianceAssetId", title="Compliance Asset Id"
    )
    compliance_flags: Optional[str] = Field(
        default=None, alias="_ComplianceFlags", title="Label setting"
    )
    compliance_tag: Optional[str] = Field(
        default=None, alias="_ComplianceTag", title="Retention label"
    )
    compliance_tag_user_id: Optional[str] = Field(
        default=None, alias="_ComplianceTagUserId", title="Label applied by"
    )
    compliance_tag_written_ti: Optional[str] = Field(
        default=None,
        alias="_ComplianceTagWrittenTime",
        title="Retention label Applied",
    )
    content_type: Optional[str] = Field(
        default=None, alias="ContentType", title="Content Type"
    )
    created: Optional[datetime] = Field(
        default=None, alias="Created", title="Created"
    )
    custcontact: Optional[str] = Field(
        default=None, alias="custcontact", title="custcontact"
    )
    custom_com1: Optional[str] = Field(
        default=None, alias="CustomCom1", title="CustomCom1"
    )
    custom_com2: Optional[str] = Field(
        default=None, alias="CustomCom2", title="CustomCom2"
    )
    custpresent: Optional[bool] = Field(
        default=None, alias="custpresent", title="custpresent"
    )
    delivery_location: Annotated[
        LASDeliverylocation, WrapValidator(optional_enum)
    ] = Field(default=None, alias="DeliveryLocation", title="DeliveryLocation")
    doc_icon: Optional[str] = Field(
        default=None, alias="DocIcon", title="Type"
    )
    dose_route: Annotated[LASDoseroute, WrapValidator(optional_enum)] = Field(
        default=None, alias="doseRoute", title="doseRoute"
    )
    dose_sub: Optional[str] = Field(
        default=None, alias="doseSub", title="doseSub"
    )
    dose_where: Optional[str] = Field(
        default=None, alias="doseWhere", title="doseWhere"
    )
    doseduration: Optional[str] = Field(
        default=None, alias="doseduration", title="doseduration"
    )
    dosevolume: Optional[str] = Field(
        default=None, alias="dosevolume", title="dosevolume"
    )
    doxycycline: Optional[bool] = Field(
        default=None, alias="Doxycycline", title="Doxycycline"
    )
    edit: Optional[str] = Field(default=None, alias="Edit", title="Edit")
    editor: Optional[str] = Field(
        default=None, alias="Editor", title="Modified By"
    )
    folder_child_count: Optional[str] = Field(
        default=None, alias="FolderChildCount", title="Folder Child Count"
    )
    icv_comment: Optional[str] = Field(
        default=None, alias="icvComment", title="icvComment"
    )
    icv_id1: Optional[str] = Field(
        default=None, alias="icvID1", title="icvID1"
    )
    icv_id2: Optional[str] = Field(
        default=None, alias="icvID2", title="icvID2"
    )
    icv_id3: Optional[str] = Field(
        default=None, alias="icvID3", title="icvID3"
    )
    icv_id4: Optional[str] = Field(
        default=None, alias="icvID4", title="icvID4"
    )
    icv_id5: Optional[str] = Field(
        default=None, alias="icvID5", title="icvID5"
    )
    icv_lims: Annotated[LASIcvlims, WrapValidator(optional_enum)] = Field(
        default=None, alias="icvLIMS", title="icvLIMS"
    )
    icv_route1: Annotated[LASIcvroute1, WrapValidator(optional_enum)] = Field(
        default=None, alias="icvRoute1", title="icvRoute1"
    )
    icv_route2: Annotated[LASIcvroute2, WrapValidator(optional_enum)] = Field(
        default=None, alias="icvRoute2", title="icvRoute2"
    )
    icv_route3: Annotated[LASIcvroute3, WrapValidator(optional_enum)] = Field(
        default=None, alias="icvRoute3", title="icvRoute3"
    )
    icv_route4: Annotated[LASIcvroute4, WrapValidator(optional_enum)] = Field(
        default=None, alias="icvRoute4", title="icvRoute4"
    )
    icv_route5: Annotated[LASIcvroute5, WrapValidator(optional_enum)] = Field(
        default=None, alias="icvRoute5", title="icvRoute5"
    )
    icv_sub1: Optional[str] = Field(
        default=None, alias="icvSub1", title="icvSub1"
    )
    icv_sub2: Optional[str] = Field(
        default=None, alias="icvSub2", title="icvSub2"
    )
    icv_sub3: Optional[str] = Field(
        default=None, alias="icvSub3", title="icvSub3"
    )
    icv_sub4: Optional[str] = Field(
        default=None, alias="icvSub4", title="icvSub4"
    )
    icv_sub5: Optional[str] = Field(
        default=None, alias="icvSub5", title="icvSub5"
    )
    id: Optional[int] = Field(default=None, alias="ID", title="ID")
    is_record: Optional[str] = Field(
        default=None, alias="_IsRecord", title="Item is a Record"
    )
    item_child_count: Optional[str] = Field(
        default=None, alias="ItemChildCount", title="Item Child Count"
    )
    l_ta_id1: Optional[str] = Field(
        default=None, alias="LTaID1", title="LTaID1"
    )
    l_ta_id2: Optional[str] = Field(
        default=None, alias="LTaID2", title="LTaID2"
    )
    l_ta_id3: Optional[str] = Field(
        default=None, alias="LTaID3", title="LTaID3"
    )
    l_ta_id4: Optional[str] = Field(
        default=None, alias="LTaID4", title="LTaID4"
    )
    l_ta_id5: Optional[str] = Field(
        default=None, alias="LTaID5", title="LTaID5"
    )
    l_tdate1: Optional[datetime] = Field(
        default=None, alias="LTdate1", title="LTdate1"
    )
    l_tdate2: Optional[datetime] = Field(
        default=None, alias="LTdate2", title="LTdate2"
    )
    l_tdate3: Optional[datetime] = Field(
        default=None, alias="LTdate3", title="LTdate3"
    )
    l_tdate4: Optional[datetime] = Field(
        default=None, alias="LTdate4", title="LTdate4"
    )
    l_tdate5: Optional[datetime] = Field(
        default=None, alias="LTdate5", title="LTdate5"
    )
    las_comments: Optional[str] = Field(
        default=None, alias="LASComments", title="LASComments"
    )
    lims_entry: Optional[bool] = Field(
        default=None, alias="LIMSEntry", title="LIMSEntry"
    )
    lims_project: Annotated[LASLimsproject, WrapValidator(optional_enum)] = (
        Field(default=None, alias="LIMSProject", title="LIMSProject")
    )
    lims_workflow: Annotated[LASLimsworkflow, WrapValidator(optional_enum)] = (
        Field(default=None, alias="LIMSWorkflow", title="LIMSWorkflow")
    )
    lims_workflow_2: Annotated[
        LASLimsworkflow2, WrapValidator(optional_enum)
    ] = Field(
        default=None, alias="LIMSWorkflow_x0020_2", title="LIMSWorkflow 2"
    )
    link_title: Optional[str] = Field(
        default=None, alias="LinkTitle", title="Animal ID"
    )
    link_title_no_menu: Optional[str] = Field(
        default=None, alias="LinkTitleNoMenu", title="Animal ID"
    )
    lt_task1: Optional[str] = Field(
        default=None, alias="LTTask1", title="LTTask1"
    )
    lt_task2: Optional[str] = Field(
        default=None, alias="LTTask2", title="LTTask2"
    )
    lt_task3: Optional[str] = Field(
        default=None, alias="LTTask3", title="LTTask3"
    )
    lt_task4: Optional[str] = Field(
        default=None, alias="LTTask4", title="LTTask4"
    )
    lt_task5: Optional[str] = Field(
        default=None, alias="LTTask5", title="LTTask5"
    )
    modified: Optional[datetime] = Field(
        default=None, alias="Modified", title="Modified"
    )
    n_end_date: Optional[datetime] = Field(
        default=None, alias="nEnd_x0020_Date", title="End Date"
    )
    n_roid1: Optional[str] = Field(
        default=None, alias="nROID1", title="nROID1"
    )
    n_roid2: Optional[str] = Field(
        default=None, alias="nROID2", title="nROID2"
    )
    n_roid3: Optional[str] = Field(
        default=None, alias="nROID3", title="nROID3"
    )
    n_roid4: Optional[str] = Field(
        default=None, alias="nROID4", title="nROID4"
    )
    n_roid5: Optional[str] = Field(
        default=None, alias="nROID5", title="nROID5"
    )
    n_start_date: Optional[datetime] = Field(
        default=None, alias="nStart_x0020_Date", title="Start Date"
    )
    oct: Optional[bool] = Field(default=None, alias="OCT", title="OCT")
    post_fix: Annotated[LASPostfix, WrapValidator(optional_enum)] = Field(
        default=None, alias="PostFix", title="PostFix"
    )
    project_id: Annotated[LASProjectid, WrapValidator(optional_enum)] = Field(
        default=None, alias="ProjectID", title="ProjectID"
    )
    project_lead2: Optional[str] = Field(
        default=None, alias="ProjectLead2", title="ProjectLead2"
    )
    protocol: Annotated[LASProtocol, WrapValidator(optional_enum)] = Field(
        default=None, alias="Protocol", title="Protocol"
    )
    qc_door_sheet: Optional[bool] = Field(
        default=None, alias="QCDoorSheet", title="QCDoorSheet"
    )
    req_age1: Optional[str] = Field(
        default=None, alias="ReqAge1", title="ReqAge1"
    )
    req_age2: Optional[str] = Field(
        default=None, alias="ReqAge2", title="ReqAge2"
    )
    req_age3: Optional[str] = Field(
        default=None, alias="ReqAge3", title="ReqAge3"
    )
    req_age4: Optional[str] = Field(
        default=None, alias="ReqAge4", title="ReqAge4"
    )
    req_pro1: Annotated[LASReqpro1, WrapValidator(optional_enum)] = Field(
        default=None, alias="ReqPro1", title="ReqPro1"
    )
    req_pro2: Annotated[LASReqpro2, WrapValidator(optional_enum)] = Field(
        default=None, alias="ReqPro2", title="ReqPro2"
    )
    req_pro3: Annotated[LASReqpro3, WrapValidator(optional_enum)] = Field(
        default=None, alias="ReqPro3", title="ReqPro3"
    )
    req_pro4: Annotated[LASReqpro4, WrapValidator(optional_enum)] = Field(
        default=None, alias="ReqPro4", title="ReqPro4"
    )
    reqdate1: Optional[datetime] = Field(
        default=None, alias="Reqdate1", title="Reqdate1"
    )
    reqdate2: Optional[datetime] = Field(
        default=None, alias="Reqdate2", title="Reqdate2"
    )
    reqdate3: Optional[datetime] = Field(
        default=None, alias="Reqdate3", title="Reqdate3"
    )
    reqdate4: Optional[datetime] = Field(
        default=None, alias="Reqdate4", title="Reqdate4"
    )
    request_status2: Annotated[
        LASRequeststatus2, WrapValidator(optional_enum)
    ] = Field(
        default="New",
        alias="RequestStatus2",
        title="RequestStatus2",
        description="New, In Progress, Complete, Cancelled",
    )
    ro_box1: Optional[str] = Field(
        default=None, alias="roBox1", title="roBox1"
    )
    ro_box2: Optional[str] = Field(
        default=None, alias="roBox2", title="roBox2"
    )
    ro_box3: Optional[str] = Field(
        default=None, alias="roBox3", title="roBox3"
    )
    ro_box4: Optional[str] = Field(
        default=None, alias="roBox4", title="roBox4"
    )
    ro_box5: Optional[str] = Field(
        default=None, alias="roBox5", title="roBox5"
    )
    ro_comment: Optional[str] = Field(
        default=None, alias="roComment", title="roComment"
    )
    ro_discard: Optional[bool] = Field(
        default=None,
        alias="roDiscard",
        title="roDiscard",
        description="Discard remaining substance after dose?",
    )
    ro_eye1: Annotated[LASRoeye1, WrapValidator(optional_enum)] = Field(
        default=None, alias="roEye1", title="roEye1"
    )
    ro_eye2: Annotated[LASRoeye2, WrapValidator(optional_enum)] = Field(
        default=None, alias="roEye2", title="roEye2"
    )
    ro_eye3: Annotated[LASRoeye3, WrapValidator(optional_enum)] = Field(
        default=None, alias="roEye3", title="roEye3"
    )
    ro_eye4: Annotated[LASRoeye4, WrapValidator(optional_enum)] = Field(
        default=None, alias="roEye4", title="roEye4"
    )
    ro_eye5: Annotated[LASRoeye5, WrapValidator(optional_enum)] = Field(
        default=None, alias="roEye5", title="roEye5"
    )
    ro_gc1: Optional[str] = Field(default=None, alias="roGC1", title="roGC1")
    ro_gc1b: Optional[str] = Field(
        default=None, alias="roGC1b", title="roGC1b"
    )
    ro_gc1c: Optional[str] = Field(
        default=None, alias="roGC1c", title="roGC1c"
    )
    ro_gc1d: Optional[str] = Field(
        default=None, alias="roGC1d", title="roGC1d"
    )
    ro_gc2: Optional[str] = Field(default=None, alias="roGC2", title="roGC2")
    ro_gc2b: Optional[str] = Field(
        default=None, alias="roGC2b", title="roGC2b"
    )
    ro_gc2c: Optional[str] = Field(
        default=None, alias="roGC2c", title="roGC2c"
    )
    ro_gc2d: Optional[str] = Field(
        default=None, alias="roGC2d", title="roGC2d"
    )
    ro_gc3: Optional[str] = Field(default=None, alias="roGC3", title="roGC3")
    ro_gc3b: Optional[str] = Field(
        default=None, alias="roGC3b", title="roGC3b"
    )
    ro_gc3c: Optional[str] = Field(
        default=None, alias="roGC3c", title="roGC3c"
    )
    ro_gc3d: Optional[str] = Field(
        default=None, alias="roGC3d", title="roGC3d"
    )
    ro_gc4: Optional[str] = Field(default=None, alias="roGC4", title="roGC4")
    ro_gc4b: Optional[str] = Field(
        default=None, alias="roGC4b", title="roGC4b"
    )
    ro_gc4c: Optional[str] = Field(
        default=None, alias="roGC4c", title="roGC4c"
    )
    ro_gc4d: Optional[str] = Field(
        default=None, alias="roGC4d", title="roGC4d"
    )
    ro_gc5: Optional[str] = Field(default=None, alias="roGC5", title="roGC5")
    ro_gc5b: Optional[str] = Field(
        default=None, alias="roGC5b", title="roGC5b"
    )
    ro_gc5c: Optional[str] = Field(
        default=None, alias="roGC5c", title="roGC5c"
    )
    ro_gc5d: Optional[str] = Field(
        default=None, alias="roGC5d", title="roGC5d"
    )
    ro_ice: Optional[bool] = Field(default=None, alias="roIce", title="roIce")
    ro_lims: Annotated[LASRolims, WrapValidator(optional_enum)] = Field(
        default=None, alias="roLIMS", title="roLIMS"
    )
    ro_lot1: Optional[str] = Field(
        default=None, alias="roLot1", title="roLot1"
    )
    ro_lot1b: Optional[str] = Field(
        default=None, alias="roLot1b", title="roLot1b"
    )
    ro_lot1c: Optional[str] = Field(
        default=None, alias="roLot1c", title="roLot1c"
    )
    ro_lot1d: Optional[str] = Field(
        default=None, alias="roLot1d", title="roLot1d"
    )
    ro_lot2: Optional[str] = Field(
        default=None, alias="roLot2", title="roLot2"
    )
    ro_lot2b: Optional[str] = Field(
        default=None, alias="roLot2b", title="roLot2b"
    )
    ro_lot2c: Optional[str] = Field(
        default=None, alias="roLot2c", title="roLot2c"
    )
    ro_lot2d: Optional[str] = Field(
        default=None, alias="roLot2d", title="roLot2d"
    )
    ro_lot3: Optional[str] = Field(
        default=None, alias="roLot3", title="roLot3"
    )
    ro_lot3b: Optional[str] = Field(
        default=None, alias="roLot3b", title="roLot3b"
    )
    ro_lot3c: Optional[str] = Field(
        default=None, alias="roLot3c", title="roLot3c"
    )
    ro_lot3d: Optional[str] = Field(
        default=None, alias="roLot3d", title="roLot3d"
    )
    ro_lot4: Optional[str] = Field(
        default=None, alias="roLot4", title="roLot4"
    )
    ro_lot4b: Optional[str] = Field(
        default=None, alias="roLot4b", title="roLot4b"
    )
    ro_lot4c: Optional[str] = Field(
        default=None, alias="roLot4c", title="roLot4c"
    )
    ro_lot4d: Optional[str] = Field(
        default=None, alias="roLot4d", title="roLot4d"
    )
    ro_lot5: Optional[str] = Field(
        default=None, alias="roLot5", title="roLot5"
    )
    ro_lot5b: Optional[str] = Field(
        default=None, alias="roLot5b", title="roLot5b"
    )
    ro_lot5c: Optional[str] = Field(
        default=None, alias="roLot5c", title="roLot5c"
    )
    ro_lot5d: Optional[str] = Field(
        default=None, alias="roLot5d", title="roLot5d"
    )
    ro_sop: Annotated[LASRosop, WrapValidator(optional_enum)] = Field(
        default=None, alias="roSOP", title="roSOP"
    )
    ro_spin_down: Optional[bool] = Field(
        default=None, alias="roSpinDown", title="roSpinDown"
    )
    ro_sub1: Optional[str] = Field(
        default=None, alias="roSub1", title="roSub1"
    )
    ro_sub1b: Optional[str] = Field(
        default=None, alias="roSub1b", title="roSub1b"
    )
    ro_sub1c: Optional[str] = Field(
        default=None, alias="roSub1c", title="roSub1c"
    )
    ro_sub1d: Optional[str] = Field(
        default=None, alias="roSub1d", title="roSub1d"
    )
    ro_sub2: Optional[str] = Field(
        default=None, alias="roSub2", title="roSub2"
    )
    ro_sub2b: Optional[str] = Field(
        default=None, alias="roSub2b", title="roSub2b"
    )
    ro_sub2c: Optional[str] = Field(
        default=None, alias="roSub2c", title="roSub2c"
    )
    ro_sub2d: Optional[str] = Field(
        default=None, alias="roSub2d", title="roSub2d"
    )
    ro_sub3: Optional[str] = Field(
        default=None, alias="roSub3", title="roSub3"
    )
    ro_sub3b: Optional[str] = Field(
        default=None, alias="roSub3b", title="roSub3b"
    )
    ro_sub3c: Optional[str] = Field(
        default=None, alias="roSub3c", title="roSub3c"
    )
    ro_sub3d: Optional[str] = Field(
        default=None, alias="roSub3d", title="roSub3d"
    )
    ro_sub4: Optional[str] = Field(
        default=None, alias="roSub4", title="roSub4"
    )
    ro_sub4b: Optional[str] = Field(
        default=None, alias="roSub4b", title="roSub4b"
    )
    ro_sub4c: Optional[str] = Field(
        default=None, alias="roSub4c", title="roSub4c"
    )
    ro_sub4d: Optional[str] = Field(
        default=None, alias="roSub4d", title="roSub4d"
    )
    ro_sub5: Optional[str] = Field(
        default=None, alias="roSub5", title="roSub5"
    )
    ro_sub5b: Optional[str] = Field(
        default=None, alias="roSub5b", title="roSub5b"
    )
    ro_sub5c: Optional[str] = Field(
        default=None, alias="roSub5c", title="roSub5c"
    )
    ro_sub5d: Optional[str] = Field(
        default=None, alias="roSub5d", title="roSub5d"
    )
    ro_tite1: Optional[str] = Field(
        default=None, alias="roTite1", title="roTite1"
    )
    ro_tite1b: Optional[str] = Field(
        default=None, alias="roTite1b", title="roTite1b"
    )
    ro_tite1c: Optional[str] = Field(
        default=None, alias="roTite1c", title="roTite1c"
    )
    ro_tite1d: Optional[str] = Field(
        default=None, alias="roTite1d", title="roTite1d"
    )
    ro_tite2: Optional[str] = Field(
        default=None, alias="roTite2", title="roTite2"
    )
    ro_tite2b: Optional[str] = Field(
        default=None, alias="roTite2b", title="roTite2b"
    )
    ro_tite2c: Optional[str] = Field(
        default=None, alias="roTite2c", title="roTite2c"
    )
    ro_tite2d: Optional[str] = Field(
        default=None, alias="roTite2d", title="roTite2d"
    )
    ro_tite3: Optional[str] = Field(
        default=None, alias="roTite3", title="roTite3"
    )
    ro_tite3b: Optional[str] = Field(
        default=None, alias="roTite3b", title="roTite3b"
    )
    ro_tite3c: Optional[str] = Field(
        default=None, alias="roTite3c", title="roTite3c"
    )
    ro_tite3d: Optional[str] = Field(
        default=None, alias="roTite3d", title="roTite3d"
    )
    ro_tite4: Optional[str] = Field(
        default=None, alias="roTite4", title="roTite4"
    )
    ro_tite4b: Optional[str] = Field(
        default=None, alias="roTite4b", title="roTite4b"
    )
    ro_tite4c: Optional[str] = Field(
        default=None, alias="roTite4c", title="roTite4c"
    )
    ro_tite4d: Optional[str] = Field(
        default=None, alias="roTite4d", title="roTite4d"
    )
    ro_tite5: Optional[str] = Field(
        default=None, alias="roTite5", title="roTite5"
    )
    ro_tite5b: Optional[str] = Field(
        default=None, alias="roTite5b", title="roTite5b"
    )
    ro_tite5c: Optional[str] = Field(
        default=None, alias="roTite5c", title="roTite5c"
    )
    ro_tite5d: Optional[str] = Field(
        default=None, alias="roTite5d", title="roTite5d"
    )
    ro_tube1: Optional[str] = Field(
        default=None, alias="roTube1", title="roTube1"
    )
    ro_tube2: Optional[str] = Field(
        default=None, alias="roTube2", title="roTube2"
    )
    ro_tube3: Optional[str] = Field(
        default=None, alias="roTube3", title="roTube3"
    )
    ro_tube4: Optional[str] = Field(
        default=None, alias="roTube4", title="roTube4"
    )
    ro_tube5: Optional[str] = Field(
        default=None, alias="roTube5", title="roTube5"
    )
    ro_vol1: Optional[str] = Field(
        default=None, alias="roVol1", title="roVol1"
    )
    ro_vol2: Optional[str] = Field(
        default=None, alias="roVol2", title="roVol2"
    )
    ro_vol3: Optional[str] = Field(
        default=None, alias="roVol3", title="roVol3"
    )
    ro_vol4: Optional[str] = Field(
        default=None, alias="roVol4", title="roVol4"
    )
    ro_vol5: Optional[str] = Field(
        default=None, alias="roVol5", title="roVol5"
    )
    ro_vol_v1: Optional[str] = Field(
        default=None, alias="roVolV1", title="roVolV1"
    )
    ro_vol_v1b: Optional[str] = Field(
        default=None, alias="roVolV1b", title="roVolV1b"
    )
    ro_vol_v1c: Optional[str] = Field(
        default=None, alias="roVolV1c", title="roVolV1c"
    )
    ro_vol_v1d: Optional[str] = Field(
        default=None, alias="roVolV1d", title="roVolV1d"
    )
    ro_vol_v2: Optional[str] = Field(
        default=None, alias="roVolV2", title="roVolV2"
    )
    ro_vol_v2b: Optional[str] = Field(
        default=None, alias="roVolV2b", title="roVolV2b"
    )
    ro_vol_v2c: Optional[str] = Field(
        default=None, alias="roVolV2c", title="roVolV2c"
    )
    ro_vol_v2d: Optional[str] = Field(
        default=None, alias="roVolV2d", title="roVolV2d"
    )
    ro_vol_v3: Optional[str] = Field(
        default=None, alias="roVolV3", title="roVolV3"
    )
    ro_vol_v3b: Optional[str] = Field(
        default=None, alias="roVolV3b", title="roVolV3b"
    )
    ro_vol_v3c: Optional[str] = Field(
        default=None, alias="roVolV3c", title="roVolV3c"
    )
    ro_vol_v3d: Optional[str] = Field(
        default=None, alias="roVolV3d", title="roVolV3d"
    )
    ro_vol_v4: Optional[str] = Field(
        default=None, alias="roVolV4", title="roVolV4"
    )
    ro_vol_v4b: Optional[str] = Field(
        default=None, alias="roVolV4b", title="roVolV4b"
    )
    ro_vol_v4c: Optional[str] = Field(
        default=None, alias="roVolV4c", title="roVolV4c"
    )
    ro_vol_v4d: Optional[str] = Field(
        default=None, alias="roVolV4d", title="roVolV4d"
    )
    ro_vol_v5: Optional[str] = Field(
        default=None, alias="roVolV5", title="roVolV5"
    )
    ro_vol_v5b: Optional[str] = Field(
        default=None, alias="roVolV5b", title="roVolV5b"
    )
    ro_vol_v5c: Optional[str] = Field(
        default=None, alias="roVolV5c", title="roVolV5c"
    )
    ro_vol_v5d: Optional[str] = Field(
        default=None, alias="roVolV5d", title="roVolV5d"
    )
    ro_where: Annotated[LASRowhere, WrapValidator(optional_enum)] = Field(
        default="LAS Drop box in Vivarium -80 freezer",
        alias="roWhere",
        title="roWhere",
    )
    sign_x002d_off_status: Optional[str] = Field(
        default=None,
        alias="Sign_x002d_off_x0020_status",
        title="Sign-off status",
    )
    spec_deli_loc: Optional[str] = Field(
        default=None,
        alias="SpecDeliLoc",
        title="Specimen Delivery Location",
        description="Specimen Delivery Location",
    )
    species: Annotated[LASSpecies, WrapValidator(optional_enum)] = Field(
        default="Mouse", alias="Species", title="Species"
    )
    tam: Optional[bool] = Field(default=None, alias="TAM", title="TAM")
    tam_age: Optional[str] = Field(
        default=None, alias="TAMAge", title="TAM Age"
    )
    tam_freq: Annotated[LASTamFrequency, WrapValidator(optional_enum)] = Field(
        default=None, alias="TAMFreq", title="TAM Frequency"
    )
    tc_prep: Optional[List[LASTcprep]] = Field(
        default=None,
        alias="TCPrep",
        title="TCPrep",
        description=(
            "Type of tissue collection preparation "
            "(Embryo Collection currently not visible)"
        ),
    )
    tc_tiss: Optional[List[LASTctiss]] = Field(
        default=None,
        alias="TCTiss",
        title="TCTiss",
        description="Type of Tissue collected",
    )
    title: Optional[str] = Field(
        default=None, alias="Title", title="Animal ID"
    )
    tmp: Optional[bool] = Field(default=None, alias="TMP", title="TMP")
    tmp_age: Optional[str] = Field(
        default=None, alias="TMPAge", title="TMP Age"
    )
    tmp_freq: Annotated[LASTmpFrequency, WrapValidator(optional_enum)] = Field(
        default=None, alias="TMPFreq", title="TMP Frequency"
    )
    ui_version_string: Optional[str] = Field(
        default=None, alias="_UIVersionString", title="Version"
    )
    wellness_report_no_x002: Optional[bool] = Field(
        default=None,
        alias="WellnessReport_x0028_No_x002F_Ye",
        title="WellnessReport(No/Yes)",
    )
    whereto_obtainsubstance_i: Annotated[
        LASWheretoobtainsubstanceIcv, WrapValidator(optional_enum)
    ] = Field(
        default=None,
        alias="WheretoObtainsubstance_x0028_ICV",
        title="WheretoObtainsubstance(ICV)",
    )
    # Added for backward compatibility
    author_id: Optional[int] = Field(default=None, alias="AuthorId")
    author_lookup_id: Optional[int] = Field(
        default=None, alias="AuthorLookupId"
    )
    editor_id: Optional[int] = Field(default=None, alias="EditorId")
